{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sungwoo and Ayaka\\\\Desktop\\\\1030SimpleTodoList\\\\1030SimpleTodoList\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n// Categoryブランチ\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo.jsx\";\nimport { IncompletePlaces } from \"./components/IncompletePlaces.jsx\";\nimport { CompletePlaces } from \"./components/CompletePlaces.jsx\";\nimport { IncompleteFood } from \"./components/IncompleteFood.jsx\";\nimport { CompleteFood } from \"./components/CompleteFood.jsx\"; // localStorage.setItem('key','value')\n// var key = localStorage.getItem('key') \n// localStorage.removeItem('key')\n// if (typeof window.localStorage !== 'undefined'){\n//   /// localStorageに対応済み\n//   console.log('localStorage対応済み！');\n// }\n// else{\n//   /// localStorageには未対応\n//   console.error('localStorage未対応..');\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [todoText, setTodoText] = useState(\"\"); // const [change, setChange] = useState()\n  // const [incompletePlaces, setIncompletePlaces] = useState([]);\n  //   // \"スペイン広場周辺　Piazza di Spagna\",\n  //   // \"テスタッチョ　Testaccio\",\n  //   // \"コロッセオ　Colosseo\"\n  // const [completePlaces, setCompletePlaces] = useState([]);\n  //   // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n  // const [incompleteFoods, setIncompleteFoods] = useState([]);\n  //   // \"ダ・ブカティーノ(Da Bucatino)\",\n  //   // \"イル・フィーコ(Il Fico)\"\n  // const [completeFoods, setCompleteFoods] = useState([]);\n  // // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n\n  const [list, setList] = useState([{\n    name: \"\",\n    category: true,\n    // foodかplace\n    isComplete: true // completeかincomplete\n\n  }]);\n  const [category, setCategory] = useState(\"Milan\");\n\n  const onChangeTodoText = event => setTodoText(event.target.value);\n\n  const onClickPlaceAdd = () => {\n    if (todoText === \"\") return;\n    const newPlaceTodos = [...incompletePlaces, {\n      name: todoText\n    }];\n    setIncompletePlaces(newPlaceTodos);\n    setTodoText(\"\"); // localStorage.setItem('incompletePlaces',incompletePlaces)\n  };\n\n  const onClickFoodAdd = () => {\n    if (todoText === \"\") return;\n    const newFoodTodos = [...incompleteFoods, {\n      name: todoText\n    }];\n    setIncompleteFoods(newFoodTodos);\n    setTodoText(\"\");\n  };\n\n  const onClickHandleChange = event => {\n    setCategory(event.target.value);\n  };\n\n  const onClickCompletePlace = index => {\n    const newIncompletePlace = [...incompletePlaces];\n    newIncompletePlace.splice(index, 1);\n    const newCompletePlace = [...completePlaces, incompletePlaces[index]];\n    setIncompletePlaces(newIncompletePlace);\n    setCompletePlaces(newCompletePlace);\n  };\n\n  const onClickCompleteFood = index => {\n    const newInCompleteFoods = [...incompleteFoods];\n    newInCompleteFoods.splice(index, 1);\n    const newCompleteFood = [...completeFoods, incompleteFoods[index]];\n    setIncompleteFoods(newInCompleteFoods);\n    setCompleteFoods(newCompleteFood);\n  };\n\n  const confirmMessage = '本当に削除しますか？';\n\n  const onClickDeletePlace = index => {\n    let result = window.confirm(confirmMessage);\n\n    if (result) {\n      const DeletePlace = [...incompletePlaces];\n      DeletePlace.splice(index, 1);\n      setIncompletePlaces(DeletePlace);\n    } else {\n      return;\n    }\n  };\n\n  const onClickDeleteFood = index => {\n    let result = window.confirm(confirmMessage);\n\n    if (result) {\n      const DeleteFood = [...incompleteFoods];\n      DeleteFood.splice(index, 1);\n      setIncompleteFoods(DeleteFood);\n    } else {\n      return;\n    }\n  };\n\n  const onClickEditPlace = index => {\n    const EditPlace = [...incompletePlaces];\n    EditPlace.splice(index, 1);\n    setIncompletePlaces(EditPlace);\n    const Edit = [incompletePlaces[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickEditFood = index => {\n    const EditFood = [...incompleteFoods];\n    EditFood.splice(index, 1);\n    setIncompleteFoods(EditFood);\n    const Edit = [incompleteFoods[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickBackPlace = index => {\n    const BackPlace = [...completePlaces];\n    BackPlace.splice(index, 1);\n    const newPlace = [...incompletePlaces, completePlaces[index]];\n    setCompletePlaces(BackPlace);\n    setIncompletePlaces(newPlace);\n  };\n\n  const onClickBackFood = index => {\n    const BackFood = [...completeFoods];\n    BackFood.splice(index, 1);\n    const newFood = [...incompleteFoods, completeFoods[index]];\n    setCompleteFoods(BackFood);\n    setIncompleteFoods(newFood);\n  }; // const filterCategory = (toPlace,toFood) => {\n  //   switch(category){\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n      todoText: todoText,\n      onChange: onChangeTodoText,\n      place: onClickPlaceAdd,\n      food: onClickFoodAdd,\n      handleChange: onClickHandleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncompletePlaces, {\n      incomplete: incompletePlaces,\n      onClickComplete: onClickCompletePlace,\n      onClickDelete: onClickDeletePlace,\n      onClickEdit: onClickEditPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletePlaces, {\n      complete: completePlaces,\n      onClickBack: onClickBackPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncompleteFood, {\n      incomplete: incompleteFoods,\n      onClickComplete: onClickCompleteFood,\n      onClickDelete: onClickDeleteFood,\n      onClickEdit: onClickEditFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompleteFood, {\n      complete: completeFoods,\n      onClickBack: onClickBackFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"+nlrU49TIvdgCRLDgA5WCJtzpdQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sungwoo and Ayaka/Desktop/1030SimpleTodoList/1030SimpleTodoList/src/App.jsx"],"names":["React","useState","InputTodo","IncompletePlaces","CompletePlaces","IncompleteFood","CompleteFood","App","todoText","setTodoText","list","setList","name","category","isComplete","setCategory","onChangeTodoText","event","target","value","onClickPlaceAdd","newPlaceTodos","incompletePlaces","setIncompletePlaces","onClickFoodAdd","newFoodTodos","incompleteFoods","setIncompleteFoods","onClickHandleChange","onClickCompletePlace","index","newIncompletePlace","splice","newCompletePlace","completePlaces","setCompletePlaces","onClickCompleteFood","newInCompleteFoods","newCompleteFood","completeFoods","setCompleteFoods","confirmMessage","onClickDeletePlace","result","window","confirm","DeletePlace","onClickDeleteFood","DeleteFood","onClickEditPlace","EditPlace","Edit","onClickEditFood","EditFood","onClickBackPlace","BackPlace","newPlace","onClickBackFood","BackFood","newFood"],"mappings":"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","sourcesContent":["// Categoryブランチ\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { InputTodo } from \"./components/InputTodo.jsx\";\r\nimport { IncompletePlaces } from \"./components/IncompletePlaces.jsx\";\r\nimport { CompletePlaces } from \"./components/CompletePlaces.jsx\";\r\nimport { IncompleteFood } from \"./components/IncompleteFood.jsx\";\r\nimport { CompleteFood } from \"./components/CompleteFood.jsx\";\r\n\r\n// localStorage.setItem('key','value')\r\n// var key = localStorage.getItem('key') \r\n// localStorage.removeItem('key')\r\n\r\n// if (typeof window.localStorage !== 'undefined'){\r\n//   /// localStorageに対応済み\r\n//   console.log('localStorage対応済み！');\r\n// }\r\n// else{\r\n//   /// localStorageには未対応\r\n//   console.error('localStorage未対応..');\r\n// }\r\n\r\n\r\nexport const App = () => {\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  // const [change, setChange] = useState()\r\n\r\n\r\n  // const [incompletePlaces, setIncompletePlaces] = useState([]);\r\n  //   // \"スペイン広場周辺　Piazza di Spagna\",\r\n  //   // \"テスタッチョ　Testaccio\",\r\n  //   // \"コロッセオ　Colosseo\"\r\n  // const [completePlaces, setCompletePlaces] = useState([]);\r\n  //   // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\r\n\r\n  // const [incompleteFoods, setIncompleteFoods] = useState([]);\r\n  //   // \"ダ・ブカティーノ(Da Bucatino)\",\r\n  //   // \"イル・フィーコ(Il Fico)\"\r\n\r\n  // const [completeFoods, setCompleteFoods] = useState([]);\r\n  // // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\r\n\r\n  const [list, setList] = useState([{\r\n    name:\"\",\r\n    category:true,  // foodかplace\r\n    isComplete:true,   // completeかincomplete\r\n  }])\r\n\r\n\r\n  const [category,setCategory] = useState(\"Milan\")\r\n\r\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\r\n  \r\n  const onClickPlaceAdd = () => {\r\n    if (todoText === \"\") return;\r\n    const newPlaceTodos = [...incompletePlaces, {name:todoText}];\r\n    setIncompletePlaces(newPlaceTodos);\r\n    setTodoText(\"\");\r\n    // localStorage.setItem('incompletePlaces',incompletePlaces)\r\n  };\r\n  const onClickFoodAdd = () => {\r\n    if (todoText === \"\") return;\r\n    const newFoodTodos = [...incompleteFoods, {name:todoText}];\r\n    setIncompleteFoods(newFoodTodos);\r\n    setTodoText(\"\");\r\n  };\r\n\r\n  const onClickHandleChange = (event) => {setCategory(event.target.value)}\r\n\r\n\r\n  const onClickCompletePlace = (index) => {\r\n    const newIncompletePlace = [...incompletePlaces];\r\n    newIncompletePlace.splice(index, 1);\r\n\r\n    const newCompletePlace = [...completePlaces, incompletePlaces[index]];\r\n    setIncompletePlaces(newIncompletePlace);\r\n    setCompletePlaces(newCompletePlace);\r\n  };\r\n\r\n  const onClickCompleteFood = (index) => {\r\n    const newInCompleteFoods = [...incompleteFoods];\r\n    newInCompleteFoods.splice(index, 1);\r\n\r\n    const newCompleteFood = [...completeFoods, incompleteFoods[index]];\r\n    setIncompleteFoods(newInCompleteFoods);\r\n    setCompleteFoods(newCompleteFood);\r\n  };\r\n\r\n  const confirmMessage = '本当に削除しますか？'\r\n\r\n  const onClickDeletePlace = (index) => {\r\n    let result = window.confirm(confirmMessage);\r\n    if (result){\r\n      const DeletePlace = [...incompletePlaces];\r\n      DeletePlace.splice(index, 1);\r\n      setIncompletePlaces(DeletePlace);\r\n    }else{\r\n      return;\r\n    }\r\n  };\r\n  \r\n  const onClickDeleteFood = (index) => {\r\n    let result = window.confirm(confirmMessage);\r\n    if (result){\r\n      const DeleteFood = [...incompleteFoods];\r\n      DeleteFood.splice(index, 1);\r\n      setIncompleteFoods(DeleteFood);\r\n    }else{\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onClickEditPlace = (index) => {\r\n    const EditPlace = [...incompletePlaces];\r\n    EditPlace.splice(index, 1);\r\n\r\n    setIncompletePlaces(EditPlace);\r\n\r\n    const Edit = [incompletePlaces[index]];\r\n    setTodoText(Edit);\r\n  };\r\n\r\n  const onClickEditFood = (index) => {\r\n    const EditFood = [...incompleteFoods];\r\n    EditFood.splice(index, 1);\r\n\r\n    setIncompleteFoods(EditFood);\r\n\r\n    const Edit = [incompleteFoods[index]];\r\n    setTodoText(Edit);\r\n  };\r\n\r\n  const onClickBackPlace = (index) => {\r\n    const BackPlace = [...completePlaces];\r\n    BackPlace.splice(index, 1);\r\n\r\n    const newPlace = [...incompletePlaces, completePlaces[index]];\r\n\r\n    setCompletePlaces(BackPlace);\r\n    setIncompletePlaces(newPlace);\r\n  };\r\n\r\n  const onClickBackFood = (index) => {\r\n    const BackFood = [...completeFoods];\r\n    BackFood.splice(index, 1);\r\n\r\n    const newFood = [...incompleteFoods, completeFoods[index]];\r\n\r\n    setCompleteFoods(BackFood);\r\n    setIncompleteFoods(newFood);\r\n  };\r\n\r\n  // const filterCategory = (toPlace,toFood) => {\r\n  //   switch(category){\r\n\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <InputTodo\r\n        todoText={todoText}\r\n        onChange={onChangeTodoText}\r\n        place={onClickPlaceAdd}\r\n        food={onClickFoodAdd}\r\n        handleChange = {onClickHandleChange}\r\n      />\r\n      <IncompletePlaces\r\n        incomplete={incompletePlaces}\r\n        onClickComplete={onClickCompletePlace}\r\n        onClickDelete={onClickDeletePlace}\r\n        onClickEdit={onClickEditPlace}\r\n      />\r\n\r\n      <CompletePlaces\r\n        complete={completePlaces}\r\n        onClickBack={onClickBackPlace}\r\n      />\r\n\r\n      <IncompleteFood\r\n        incomplete={incompleteFoods}\r\n        onClickComplete={onClickCompleteFood}\r\n        onClickDelete={onClickDeleteFood}\r\n        onClickEdit={onClickEditFood}\r\n      />\r\n\r\n      <CompleteFood complete={completeFoods} onClickBack={onClickBackFood} />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}