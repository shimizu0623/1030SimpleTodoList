{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sungwoo and Ayaka\\\\Desktop\\\\1030SimpleTodoList\\\\1030SimpleTodoList\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n// Categoryブランチ\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo.jsx\";\nimport { IncompletePlaces } from \"./components/IncompletePlaces.jsx\";\nimport { CompletePlaces } from \"./components/CompletePlaces.jsx\";\nimport { IncompleteFood } from \"./components/IncompleteFood.jsx\";\nimport { CompleteFood } from \"./components/CompleteFood.jsx\"; // localStorage.setItem('key','value')\n// var key = localStorage.getItem('key') \n// localStorage.removeItem('key')\n// if (typeof window.localStorage !== 'undefined'){\n//   /// localStorageに対応済み\n//   console.log('localStorage対応済み！');\n// }\n// else{\n//   /// localStorageには未対応\n//   console.error('localStorage未対応..');\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [todoText, setTodoText] = useState(\"\"); // const [change, setChange] = useState()\n\n  const [incompletePlaces, setIncompletePlaces] = useState([]); // \"スペイン広場周辺　Piazza di Spagna\",\n  // \"テスタッチョ　Testaccio\",\n  // \"コロッセオ　Colosseo\"\n\n  const [completePlaces, setCompletePlaces] = useState([]); // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n\n  const [incompleteFoods, setIncompleteFoods] = useState([]); // \"ダ・ブカティーノ(Da Bucatino)\",\n  // \"イル・フィーコ(Il Fico)\"\n\n  const [completeFoods, setCompleteFoods] = useState([]); // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n\n  const [list, setList] = useState({\n    incompletePlaces: \"\",\n    completePlaces: \"\",\n    incompleteFoods: \"\",\n    completeFoods: \"\"\n  });\n  const [category, setCategory] = useState(\"Milan\");\n\n  const onChangeTodoText = event => setTodoText(event.target.value);\n\n  const onClickPlaceAdd = () => {\n    if (todoText === \"\") return;\n    const newPlaceTodos = [...incompletePlaces, {\n      name: todoText\n    }];\n    setIncompletePlaces(newPlaceTodos);\n    setTodoText(\"\"); // localStorage.setItem('incompletePlaces',incompletePlaces)\n  };\n\n  const onClickFoodAdd = () => {\n    if (todoText === \"\") return;\n    const newFoodTodos = [...incompleteFoods, {\n      name: todoText\n    }];\n    setIncompleteFoods(newFoodTodos);\n    setTodoText(\"\");\n  };\n\n  const onClickHandleChange = event => {\n    setCategory(event.target.value);\n  };\n\n  const onClickCompletePlace = index => {\n    const newIncompletePlace = [...incompletePlaces];\n    newIncompletePlace.splice(index, 1);\n    const newCompletePlace = [...completePlaces, incompletePlaces[index]];\n    setIncompletePlaces(newIncompletePlace);\n    setCompletePlaces(newCompletePlace);\n  };\n\n  const onClickCompleteFood = index => {\n    const newInCompleteFoods = [...incompleteFoods];\n    newInCompleteFoods.splice(index, 1);\n    const newCompleteFood = [...completeFoods, incompleteFoods[index]];\n    setIncompleteFoods(newInCompleteFoods);\n    setCompleteFoods(newCompleteFood);\n  };\n\n  const confirmMessage = '本当に削除しますか？';\n\n  const onClickDeletePlace = index => {\n    let result = window.confirm(confirmMessage);\n\n    if (result) {\n      const DeletePlace = [...incompletePlaces];\n      DeletePlace.splice(index, 1);\n      setIncompletePlaces(DeletePlace);\n    } else {\n      return;\n    }\n  };\n\n  const onClickDeleteFood = index => {\n    let result = window.confirm(confirmMessage);\n\n    if (result) {\n      const DeleteFood = [...incompleteFoods];\n      DeleteFood.splice(index, 1);\n      setIncompleteFoods(DeleteFood);\n    } else {\n      return;\n    }\n  };\n\n  const onClickEditPlace = index => {\n    const EditPlace = [...incompletePlaces];\n    EditPlace.splice(index, 1);\n    setIncompletePlaces(EditPlace);\n    const Edit = [incompletePlaces[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickEditFood = index => {\n    const EditFood = [...incompleteFoods];\n    EditFood.splice(index, 1);\n    setIncompleteFoods(EditFood);\n    const Edit = [incompleteFoods[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickBackPlace = index => {\n    const BackPlace = [...completePlaces];\n    BackPlace.splice(index, 1);\n    const newPlace = [...incompletePlaces, completePlaces[index]];\n    setCompletePlaces(BackPlace);\n    setIncompletePlaces(newPlace);\n  };\n\n  const onClickBackFood = index => {\n    const BackFood = [...completeFoods];\n    BackFood.splice(index, 1);\n    const newFood = [...incompleteFoods, completeFoods[index]];\n    setCompleteFoods(BackFood);\n    setIncompleteFoods(newFood);\n  }; // const filterCategory = (toPlace,toFood) => {\n  //   switch(category){\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n      todoText: todoText,\n      onChange: onChangeTodoText,\n      place: onClickPlaceAdd,\n      food: onClickFoodAdd,\n      handleChange: onClickHandleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncompletePlaces, {\n      incomplete: incompletePlaces,\n      onClickComplete: onClickCompletePlace,\n      onClickDelete: onClickDeletePlace,\n      onClickEdit: onClickEditPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletePlaces, {\n      complete: completePlaces,\n      onClickBack: onClickBackPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncompleteFood, {\n      incomplete: incompleteFoods,\n      onClickComplete: onClickCompleteFood,\n      onClickDelete: onClickDeleteFood,\n      onClickEdit: onClickEditFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompleteFood, {\n      complete: completeFoods,\n      onClickBack: onClickBackFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"uSs8v+EWOghi9kev7fTRgQ4Uh2A=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sungwoo and Ayaka/Desktop/1030SimpleTodoList/1030SimpleTodoList/src/App.jsx"],"names":["React","useState","InputTodo","IncompletePlaces","CompletePlaces","IncompleteFood","CompleteFood","App","todoText","setTodoText","incompletePlaces","setIncompletePlaces","completePlaces","setCompletePlaces","incompleteFoods","setIncompleteFoods","completeFoods","setCompleteFoods","list","setList","category","setCategory","onChangeTodoText","event","target","value","onClickPlaceAdd","newPlaceTodos","name","onClickFoodAdd","newFoodTodos","onClickHandleChange","onClickCompletePlace","index","newIncompletePlace","splice","newCompletePlace","onClickCompleteFood","newInCompleteFoods","newCompleteFood","confirmMessage","onClickDeletePlace","result","window","confirm","DeletePlace","onClickDeleteFood","DeleteFood","onClickEditPlace","EditPlace","Edit","onClickEditFood","EditFood","onClickBackPlace","BackPlace","newPlace","onClickBackFood","BackFood","newFood"],"mappings":"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","sourcesContent":["// Categoryブランチ\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { InputTodo } from \"./components/InputTodo.jsx\";\r\nimport { IncompletePlaces } from \"./components/IncompletePlaces.jsx\";\r\nimport { CompletePlaces } from \"./components/CompletePlaces.jsx\";\r\nimport { IncompleteFood } from \"./components/IncompleteFood.jsx\";\r\nimport { CompleteFood } from \"./components/CompleteFood.jsx\";\r\n\r\n// localStorage.setItem('key','value')\r\n// var key = localStorage.getItem('key') \r\n// localStorage.removeItem('key')\r\n\r\n// if (typeof window.localStorage !== 'undefined'){\r\n//   /// localStorageに対応済み\r\n//   console.log('localStorage対応済み！');\r\n// }\r\n// else{\r\n//   /// localStorageには未対応\r\n//   console.error('localStorage未対応..');\r\n// }\r\n\r\n\r\nexport const App = () => {\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  // const [change, setChange] = useState()\r\n\r\n\r\n  const [incompletePlaces, setIncompletePlaces] = useState([]);\r\n    // \"スペイン広場周辺　Piazza di Spagna\",\r\n    // \"テスタッチョ　Testaccio\",\r\n    // \"コロッセオ　Colosseo\"\r\n  const [completePlaces, setCompletePlaces] = useState([]);\r\n    // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\r\n\r\n  const [incompleteFoods, setIncompleteFoods] = useState([]);\r\n    // \"ダ・ブカティーノ(Da Bucatino)\",\r\n    // \"イル・フィーコ(Il Fico)\"\r\n\r\n  const [completeFoods, setCompleteFoods] = useState([]);\r\n  // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\r\n\r\n  const [list, setList] = useState({\r\n    incompletePlaces:\"\",\r\n    completePlaces:\"\",\r\n    incompleteFoods:\"\",\r\n    completeFoods:\"\",\r\n  })\r\n\r\n\r\n  const [category,setCategory] = useState(\"Milan\")\r\n\r\n  \r\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\r\n  \r\n  const onClickPlaceAdd = () => {\r\n    if (todoText === \"\") return;\r\n    const newPlaceTodos = [...incompletePlaces, {name:todoText}];\r\n    setIncompletePlaces(newPlaceTodos);\r\n    setTodoText(\"\");\r\n    // localStorage.setItem('incompletePlaces',incompletePlaces)\r\n  };\r\n  const onClickFoodAdd = () => {\r\n    if (todoText === \"\") return;\r\n    const newFoodTodos = [...incompleteFoods, {name:todoText}];\r\n    setIncompleteFoods(newFoodTodos);\r\n    setTodoText(\"\");\r\n  };\r\n\r\n  const onClickHandleChange = (event) => {setCategory(event.target.value)}\r\n\r\n\r\n  const onClickCompletePlace = (index) => {\r\n    const newIncompletePlace = [...incompletePlaces];\r\n    newIncompletePlace.splice(index, 1);\r\n\r\n    const newCompletePlace = [...completePlaces, incompletePlaces[index]];\r\n    setIncompletePlaces(newIncompletePlace);\r\n    setCompletePlaces(newCompletePlace);\r\n  };\r\n\r\n  const onClickCompleteFood = (index) => {\r\n    const newInCompleteFoods = [...incompleteFoods];\r\n    newInCompleteFoods.splice(index, 1);\r\n\r\n    const newCompleteFood = [...completeFoods, incompleteFoods[index]];\r\n    setIncompleteFoods(newInCompleteFoods);\r\n    setCompleteFoods(newCompleteFood);\r\n  };\r\n\r\n  const confirmMessage = '本当に削除しますか？'\r\n\r\n  const onClickDeletePlace = (index) => {\r\n    let result = window.confirm(confirmMessage);\r\n    if (result){\r\n      const DeletePlace = [...incompletePlaces];\r\n      DeletePlace.splice(index, 1);\r\n      setIncompletePlaces(DeletePlace);\r\n    }else{\r\n      return;\r\n    }\r\n  };\r\n  \r\n  const onClickDeleteFood = (index) => {\r\n    let result = window.confirm(confirmMessage);\r\n    if (result){\r\n      const DeleteFood = [...incompleteFoods];\r\n      DeleteFood.splice(index, 1);\r\n      setIncompleteFoods(DeleteFood);\r\n    }else{\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onClickEditPlace = (index) => {\r\n    const EditPlace = [...incompletePlaces];\r\n    EditPlace.splice(index, 1);\r\n\r\n    setIncompletePlaces(EditPlace);\r\n\r\n    const Edit = [incompletePlaces[index]];\r\n    setTodoText(Edit);\r\n  };\r\n\r\n  const onClickEditFood = (index) => {\r\n    const EditFood = [...incompleteFoods];\r\n    EditFood.splice(index, 1);\r\n\r\n    setIncompleteFoods(EditFood);\r\n\r\n    const Edit = [incompleteFoods[index]];\r\n    setTodoText(Edit);\r\n  };\r\n\r\n  const onClickBackPlace = (index) => {\r\n    const BackPlace = [...completePlaces];\r\n    BackPlace.splice(index, 1);\r\n\r\n    const newPlace = [...incompletePlaces, completePlaces[index]];\r\n\r\n    setCompletePlaces(BackPlace);\r\n    setIncompletePlaces(newPlace);\r\n  };\r\n\r\n  const onClickBackFood = (index) => {\r\n    const BackFood = [...completeFoods];\r\n    BackFood.splice(index, 1);\r\n\r\n    const newFood = [...incompleteFoods, completeFoods[index]];\r\n\r\n    setCompleteFoods(BackFood);\r\n    setIncompleteFoods(newFood);\r\n  };\r\n\r\n  // const filterCategory = (toPlace,toFood) => {\r\n  //   switch(category){\r\n\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <InputTodo\r\n        todoText={todoText}\r\n        onChange={onChangeTodoText}\r\n        place={onClickPlaceAdd}\r\n        food={onClickFoodAdd}\r\n        handleChange = {onClickHandleChange}\r\n      />\r\n      <IncompletePlaces\r\n        incomplete={incompletePlaces}\r\n        onClickComplete={onClickCompletePlace}\r\n        onClickDelete={onClickDeletePlace}\r\n        onClickEdit={onClickEditPlace}\r\n      />\r\n\r\n      <CompletePlaces\r\n        complete={completePlaces}\r\n        onClickBack={onClickBackPlace}\r\n      />\r\n\r\n      <IncompleteFood\r\n        incomplete={incompleteFoods}\r\n        onClickComplete={onClickCompleteFood}\r\n        onClickDelete={onClickDeleteFood}\r\n        onClickEdit={onClickEditFood}\r\n      />\r\n\r\n      <CompleteFood complete={completeFoods} onClickBack={onClickBackFood} />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}