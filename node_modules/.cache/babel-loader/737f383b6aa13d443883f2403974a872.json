{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sungwoo and Ayaka\\\\Desktop\\\\1030SimpleTodoList\\\\1030SimpleTodoList\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n// Categoryブランチ\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo.jsx\";\nimport { IncompletePlaces } from \"./components/IncompletePlaces.jsx\";\nimport { CompletePlaces } from \"./components/CompletePlaces.jsx\";\nimport { IncompleteFood } from \"./components/IncompleteFood.jsx\";\nimport { CompleteFood } from \"./components/CompleteFood.jsx\"; // localStorage.setItem('key','value')\n// var key = localStorage.getItem('key') \n// localStorage.removeItem('key')\n// if (typeof window.localStorage !== 'undefined'){\n//   /// localStorageに対応済み\n//   console.log('localStorage対応済み！');\n// }\n// else{\n//   /// localStorageには未対応\n//   console.error('localStorage未対応..');\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [todoText, setTodoText] = useState(\"\"); // const [change, setChange] = useState()\n  // const [incompletePlaces, setIncompletePlaces] = useState([]);\n  //   // \"スペイン広場周辺　Piazza di Spagna\",\n  //   // \"テスタッチョ　Testaccio\",\n  //   // \"コロッセオ　Colosseo\"\n  // const [completePlaces, setCompletePlaces] = useState([]);\n  //   // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n  // const [incompleteFoods, setIncompleteFoods] = useState([]);\n  //   // \"ダ・ブカティーノ(Da Bucatino)\",\n  //   // \"イル・フィーコ(Il Fico)\"\n  // const [completeFoods, setCompleteFoods] = useState([]);\n  // // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n\n  const [list, setList] = useState([{\n    name: \"\",\n    section: \"food\",\n    // foodかplace\n    isComplete: true,\n    // completeかincomplete\n    category: \"Milan\"\n  }]);\n  const [category, setCategory] = useState(\"Milan\");\n\n  const onChangeTodoText = event => setTodoText(event.target.value); // const onClickPlaceAdd = () => {\n  //   if (todoText === \"\") return;\n  //   const newPlaceTodos = [...incompletePlaces, {name:todoText}];\n  //   setIncompletePlaces(newPlaceTodos);\n  //   setTodoText(\"\");\n  //   // localStorage.setItem('incompletePlaces',incompletePlaces)\n  // };\n  // const onClickFoodAdd = () => {\n  //   if (todoText === \"\") return;\n  //   const newFoodTodos = [...incompleteFoods, {name:todoText}];\n  //   setIncompleteFoods(newFoodTodos);\n  //   setTodoText(\"\");\n  // };\n\n\n  const onClickAdd = section => {\n    if (todoText === \"\") return;\n    const todo = {\n      name: todoText,\n      section: section,\n      isComplete: false,\n      category: category\n    };\n    setList([...list, todo]);\n    setTodoText(\"\");\n  };\n\n  const onClickPlaceAdd = () => {\n    onClickAdd('place');\n  };\n\n  const onClickFoodAdd = () => {\n    onClickAdd('food');\n  };\n\n  const onClickHandleChange = event => {\n    setCategory(event.target.value);\n  };\n\n  const onClickCompletePlace = index => {\n    const newIncompletePlace = [...incompletePlaces];\n    newIncompletePlace.splice(index, 1);\n    const newCompletePlace = [...completePlaces, incompletePlaces[index]];\n    setIncompletePlaces(newIncompletePlace);\n    setCompletePlaces(newCompletePlace);\n  };\n\n  const onClickCompleteFood = index => {\n    const newInCompleteFoods = [...incompleteFoods];\n    newInCompleteFoods.splice(index, 1);\n    const newCompleteFood = [...completeFoods, incompleteFoods[index]];\n    setIncompleteFoods(newInCompleteFoods);\n    setCompleteFoods(newCompleteFood);\n  };\n\n  const confirmMessage = '本当に削除しますか？';\n\n  const onClickDeletePlace = index => {\n    let result = window.confirm(confirmMessage);\n\n    if (result) {\n      const DeletePlace = [...incompletePlaces];\n      DeletePlace.splice(index, 1);\n      setIncompletePlaces(DeletePlace);\n    } else {\n      return;\n    }\n  };\n\n  const onClickDeleteFood = index => {\n    let result = window.confirm(confirmMessage);\n\n    if (result) {\n      const DeleteFood = [...incompleteFoods];\n      DeleteFood.splice(index, 1);\n      setIncompleteFoods(DeleteFood);\n    } else {\n      return;\n    }\n  };\n\n  const onClickEditPlace = index => {\n    const EditPlace = [...incompletePlaces];\n    EditPlace.splice(index, 1);\n    setIncompletePlaces(EditPlace);\n    const Edit = [incompletePlaces[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickEditFood = index => {\n    const EditFood = [...incompleteFoods];\n    EditFood.splice(index, 1);\n    setIncompleteFoods(EditFood);\n    const Edit = [incompleteFoods[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickBackPlace = index => {\n    const BackPlace = [...completePlaces];\n    BackPlace.splice(index, 1);\n    const newPlace = [...incompletePlaces, completePlaces[index]];\n    setCompletePlaces(BackPlace);\n    setIncompletePlaces(newPlace);\n  };\n\n  const onClickBackFood = index => {\n    const BackFood = [...completeFoods];\n    BackFood.splice(index, 1);\n    const newFood = [...incompleteFoods, completeFoods[index]];\n    setCompleteFoods(BackFood);\n    setIncompleteFoods(newFood);\n  }; // const filterCategory = (toPlace,toFood) => {\n  //   switch(category){\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n      todoText: todoText,\n      onChange: onChangeTodoText,\n      place: onClickPlaceAdd,\n      food: onClickFoodAdd,\n      handleChange: onClickHandleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncompletePlaces, {\n      incomplete: incompletePlaces,\n      onClickComplete: onClickCompletePlace,\n      onClickDelete: onClickDeletePlace,\n      onClickEdit: onClickEditPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletePlaces, {\n      complete: completePlaces,\n      onClickBack: onClickBackPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncompleteFood, {\n      incomplete: incompleteFoods,\n      onClickComplete: onClickCompleteFood,\n      onClickDelete: onClickDeleteFood,\n      onClickEdit: onClickEditFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompleteFood, {\n      complete: completeFoods,\n      onClickBack: onClickBackFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"v+IW8KydqZm2+jAODVT0hOtiHmE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sungwoo and Ayaka/Desktop/1030SimpleTodoList/1030SimpleTodoList/src/App.jsx"],"names":["React","useState","InputTodo","IncompletePlaces","CompletePlaces","IncompleteFood","CompleteFood","App","todoText","setTodoText","list","setList","name","section","isComplete","category","setCategory","onChangeTodoText","event","target","value","onClickAdd","todo","onClickPlaceAdd","onClickFoodAdd","onClickHandleChange","onClickCompletePlace","index","newIncompletePlace","incompletePlaces","splice","newCompletePlace","completePlaces","setIncompletePlaces","setCompletePlaces","onClickCompleteFood","newInCompleteFoods","incompleteFoods","newCompleteFood","completeFoods","setIncompleteFoods","setCompleteFoods","confirmMessage","onClickDeletePlace","result","window","confirm","DeletePlace","onClickDeleteFood","DeleteFood","onClickEditPlace","EditPlace","Edit","onClickEditFood","EditFood","onClickBackPlace","BackPlace","newPlace","onClickBackFood","BackFood","newFood"],"mappings":"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","sourcesContent":["// Categoryブランチ\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { InputTodo } from \"./components/InputTodo.jsx\";\r\nimport { IncompletePlaces } from \"./components/IncompletePlaces.jsx\";\r\nimport { CompletePlaces } from \"./components/CompletePlaces.jsx\";\r\nimport { IncompleteFood } from \"./components/IncompleteFood.jsx\";\r\nimport { CompleteFood } from \"./components/CompleteFood.jsx\";\r\n\r\n// localStorage.setItem('key','value')\r\n// var key = localStorage.getItem('key') \r\n// localStorage.removeItem('key')\r\n\r\n// if (typeof window.localStorage !== 'undefined'){\r\n//   /// localStorageに対応済み\r\n//   console.log('localStorage対応済み！');\r\n// }\r\n// else{\r\n//   /// localStorageには未対応\r\n//   console.error('localStorage未対応..');\r\n// }\r\n\r\n\r\nexport const App = () => {\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  // const [change, setChange] = useState()\r\n\r\n\r\n  // const [incompletePlaces, setIncompletePlaces] = useState([]);\r\n  //   // \"スペイン広場周辺　Piazza di Spagna\",\r\n  //   // \"テスタッチョ　Testaccio\",\r\n  //   // \"コロッセオ　Colosseo\"\r\n  // const [completePlaces, setCompletePlaces] = useState([]);\r\n  //   // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\r\n\r\n  // const [incompleteFoods, setIncompleteFoods] = useState([]);\r\n  //   // \"ダ・ブカティーノ(Da Bucatino)\",\r\n  //   // \"イル・フィーコ(Il Fico)\"\r\n\r\n  // const [completeFoods, setCompleteFoods] = useState([]);\r\n  // // \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\r\n\r\n  const [list, setList] = useState([{\r\n    name: \"\",\r\n    section: \"food\",  // foodかplace\r\n    isComplete: true,   // completeかincomplete\r\n    category: \"Milan\",\r\n  }])\r\n\r\n\r\n  const [category,setCategory] = useState(\"Milan\")\r\n\r\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\r\n  \r\n  // const onClickPlaceAdd = () => {\r\n  //   if (todoText === \"\") return;\r\n  //   const newPlaceTodos = [...incompletePlaces, {name:todoText}];\r\n  //   setIncompletePlaces(newPlaceTodos);\r\n  //   setTodoText(\"\");\r\n  //   // localStorage.setItem('incompletePlaces',incompletePlaces)\r\n  // };\r\n  // const onClickFoodAdd = () => {\r\n  //   if (todoText === \"\") return;\r\n  //   const newFoodTodos = [...incompleteFoods, {name:todoText}];\r\n  //   setIncompleteFoods(newFoodTodos);\r\n  //   setTodoText(\"\");\r\n  // };\r\n\r\n  \r\n  const onClickAdd = (section) => {\r\n    if (todoText === \"\") return;\r\n    const todo = {\r\n      name: todoText,\r\n      section: section,  \r\n      isComplete: false,   \r\n      category: category,\r\n    }\r\n    setList([...list,todo]);\r\n    setTodoText(\"\");\r\n  }\r\n  \r\n  const onClickPlaceAdd = () => {\r\n    onClickAdd('place')\r\n  }\r\n\r\n  const onClickFoodAdd = () => {\r\n    onClickAdd('food')\r\n  }\r\n\r\n  const onClickHandleChange = (event) => {setCategory(event.target.value)}\r\n\r\n\r\n  const onClickCompletePlace = (index) => {\r\n    const newIncompletePlace = [...incompletePlaces];\r\n    newIncompletePlace.splice(index, 1);\r\n\r\n    const newCompletePlace = [...completePlaces, incompletePlaces[index]];\r\n    setIncompletePlaces(newIncompletePlace);\r\n    setCompletePlaces(newCompletePlace);\r\n  };\r\n\r\n  const onClickCompleteFood = (index) => {\r\n    const newInCompleteFoods = [...incompleteFoods];\r\n    newInCompleteFoods.splice(index, 1);\r\n\r\n    const newCompleteFood = [...completeFoods, incompleteFoods[index]];\r\n    setIncompleteFoods(newInCompleteFoods);\r\n    setCompleteFoods(newCompleteFood);\r\n  };\r\n\r\n  const confirmMessage = '本当に削除しますか？'\r\n\r\n  const onClickDeletePlace = (index) => {\r\n    let result = window.confirm(confirmMessage);\r\n    if (result){\r\n      const DeletePlace = [...incompletePlaces];\r\n      DeletePlace.splice(index, 1);\r\n      setIncompletePlaces(DeletePlace);\r\n    }else{\r\n      return;\r\n    }\r\n  };\r\n  \r\n  const onClickDeleteFood = (index) => {\r\n    let result = window.confirm(confirmMessage);\r\n    if (result){\r\n      const DeleteFood = [...incompleteFoods];\r\n      DeleteFood.splice(index, 1);\r\n      setIncompleteFoods(DeleteFood);\r\n    }else{\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onClickEditPlace = (index) => {\r\n    const EditPlace = [...incompletePlaces];\r\n    EditPlace.splice(index, 1);\r\n\r\n    setIncompletePlaces(EditPlace);\r\n\r\n    const Edit = [incompletePlaces[index]];\r\n    setTodoText(Edit);\r\n  };\r\n\r\n  const onClickEditFood = (index) => {\r\n    const EditFood = [...incompleteFoods];\r\n    EditFood.splice(index, 1);\r\n\r\n    setIncompleteFoods(EditFood);\r\n\r\n    const Edit = [incompleteFoods[index]];\r\n    setTodoText(Edit);\r\n  };\r\n\r\n  const onClickBackPlace = (index) => {\r\n    const BackPlace = [...completePlaces];\r\n    BackPlace.splice(index, 1);\r\n\r\n    const newPlace = [...incompletePlaces, completePlaces[index]];\r\n\r\n    setCompletePlaces(BackPlace);\r\n    setIncompletePlaces(newPlace);\r\n  };\r\n\r\n  const onClickBackFood = (index) => {\r\n    const BackFood = [...completeFoods];\r\n    BackFood.splice(index, 1);\r\n\r\n    const newFood = [...incompleteFoods, completeFoods[index]];\r\n\r\n    setCompleteFoods(BackFood);\r\n    setIncompleteFoods(newFood);\r\n  };\r\n\r\n  // const filterCategory = (toPlace,toFood) => {\r\n  //   switch(category){\r\n\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <InputTodo\r\n        todoText={todoText}\r\n        onChange={onChangeTodoText}\r\n        place={onClickPlaceAdd}\r\n        food={onClickFoodAdd}\r\n        handleChange = {onClickHandleChange}\r\n      />\r\n      <IncompletePlaces\r\n        incomplete={incompletePlaces}\r\n        onClickComplete={onClickCompletePlace}\r\n        onClickDelete={onClickDeletePlace}\r\n        onClickEdit={onClickEditPlace}\r\n      />\r\n\r\n      <CompletePlaces\r\n        complete={completePlaces}\r\n        onClickBack={onClickBackPlace}\r\n      />\r\n\r\n      <IncompleteFood\r\n        incomplete={incompleteFoods}\r\n        onClickComplete={onClickCompleteFood}\r\n        onClickDelete={onClickDeleteFood}\r\n        onClickEdit={onClickEditFood}\r\n      />\r\n\r\n      <CompleteFood complete={completeFoods} onClickBack={onClickBackFood} />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}